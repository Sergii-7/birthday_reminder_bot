from asyncio import sleep as asyncio_sleep
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, FSInputFile
from config import HOST, media_file_path
from src.bot_app.create_bot import bot
from src.sql.models import User
from src.sql.func_db import get_login_user_by_telegram_id
from src.service.loggers.py_logger_tel_bot import get_logger

logger = get_logger(__name__)


class Menu:
    """ Menu buttons """
    async def start_command(self, user: User, message_text: str = None):
        """ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –∞–±–æ –¥–∞—î–º–æ –π–æ–º—É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∞–±–æ –∑–∞–ø–∏—Ç—É—î–º–æ —É –Ω—å–æ–≥–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ """
        if user.phone_number:
            if user.birthday:
                ''' –î–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é '''
                await self.get_main_menu(user=user, message_text=message_text)
            else:
                ''' –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: sms + miniapp '''
                await self.request_birthday(user=user)
        else:
            ''' –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ '''
            await self.request_phone_number(user=user)

    async def request_phone_number(self, user: User):
        """ –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É """
        text = "–ü–æ–¥—ñ–ª–∏—Ç—å—Å—è —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –∫–Ω–æ–ø–∫–æ—é –Ω–∏–∂—á–µ üëá"
        b_contact = KeyboardButton(text='–ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º', request_contact=True)
        reply_markup = ReplyKeyboardMarkup(keyboard=[[b_contact]], resize_keyboard=True, one_time_keyboard=True)
        await bot.send_message(chat_id=user.telegram_id, text=text, reply_markup=reply_markup)

    async def request_birthday(self, user: User):
        """ –†–æ–±–∏–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –ø—Ä–æ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: sms + miniapp """
        user_login = await get_login_user_by_telegram_id(telegram_id=user.telegram_id)
        if not user_login:
            return
        web_app = {'url': f"{HOST}/path/login/{user.telegram_id}/{user_login.password}"}
        text = "–í–∫–∞–∑–∞—Ç–∏ —Å–≤—ñ–π –î–µ–Ω—å –ù–∞—Ä–æ–¥–∂–µ–Ω–Ω—è"
        text_b = "üéÇ ü•≥ üéâ"
        reply_markup = InlineKeyboardMarkup(inline_keyboard=[[InlineKeyboardButton(text=text_b, web_app=web_app)],])
        await bot.send_message(chat_id=user.telegram_id, text=text, reply_markup=reply_markup)

    async def get_main_menu(self, user: User, message_text: str = None, pause: int | float = None):
        """ –î–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é """
        buttons = []
        ''' menu for everybody (data users) '''
        buttons.append([InlineKeyboardButton(text="‚öí –ó–º—ñ–Ω–∏—Ç–∏ —Å–≤—ñ–π üéÇ üõ†", callback_data=f"0:user1")])
        buttons.append([InlineKeyboardButton(text="üìÖ –ö–∞–ª–µ–Ω–¥–∞—Ä –ø–æ–¥—ñ–π üìÖ", callback_data=f"0:user2")])
        buttons.append([InlineKeyboardButton(text="üíµ –ó—Ä–æ–±–∏—Ç–∏ –≤–Ω–µ—Å–æ–∫ üíµ", callback_data=f"0:user3")])
        if user.info in ['admin', 'super-admin']:
            ''' add menu for admin and super-admin (check users) '''
            buttons.append([InlineKeyboardButton(text="üí∞ –ó–≤—ñ—Ç –ø–æ –≤–Ω–µ—Å–∫–∞–º üí∞", callback_data=f"0:admin1")])
            buttons.append([InlineKeyboardButton(text="üéÜ –°—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ–¥—ñ—é üéá", callback_data=f"0:admin2")])
            buttons.append([InlineKeyboardButton(text="–ü–µ—Ä–µ–¥–∞—Ç–∏ –ø—Ä–∞–≤–∞ –∞–¥–º—ñ–Ω–∞", callback_data=f"0:admin3")])
            if user.info == 'super-admin':
                ''' add menu for super-admin (add new group) '''
                buttons.append([InlineKeyboardButton(text="‚öôÔ∏è –∫–µ—Ä—É–≤–∞—Ç–∏ –≥—Ä—É–ø–∞–º–∏ ‚öôÔ∏è", callback_data="0:super1")])
                # buttons.append([InlineKeyboardButton(text=" bla-bla ", callback_data="0:super2")])
        buttons.append([InlineKeyboardButton(text="ü´£ —Å—Ö–æ–≤–∞—Ç–∏ –ø–∞–Ω–µ–ª—å ü´£", callback_data="0:x")])
        reply_markup = InlineKeyboardMarkup(inline_keyboard=buttons)
        photo = FSInputFile(path=f"{media_file_path}admin_panel.jpg")
        text = f"–ü—Ä–∏–≤—ñ—Ç, {user.first_name}!"
        if pause and isinstance(pause, (int, float)):
            await asyncio_sleep(delay=pause)
        try:
            await bot.send_photo(chat_id=user.telegram_id, caption=text, photo=photo, reply_markup=reply_markup)
        except Exception as e:
            logger.error(e)
            await bot.send_message(chat_id=user.telegram_id, text=text, reply_markup=reply_markup)

